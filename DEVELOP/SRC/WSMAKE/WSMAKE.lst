Microsoft (R) Macro Assembler Version 6.11		    04/22/12 02:03:05
WSMAKE.asm						     Page 1 - 1


				;=======================================================================|
				;									|
				;		Wander Swan Total Sound Driver				|
				;				MML Compiler Program			|
				;									|
				;					Programmed by			|
				;						A.Watanabe		|
				;									|
				;=======================================================================|

				.186
				.model	tiny,stdcall

				;=======================================================================|
				;				define					|
				;=======================================================================|

				include	lib_dos.inc
			      C 
			      C 
			      C ComSmole	proto	near,	sizeCOM:WORD
			      C ExeSmole	proto	near,	szDGROUP:WORD
			      C Memory_Open	proto	near,	ParaSize:word
			      C Memory_Close	proto	near,	CloseSegment:word
			      C 
			      C File_Create	proto	near,	cFilename:dword,iAttr:word
			      C File_Open	proto	near,	cFilename:dword,cMode:byte
			      C File_Close	proto	near,	hFile:word
			      C File_Load	proto	near,	hFile:word,	cBuff:dword
			      C File_Load_S	proto	near,	hFile:word,	iSize:word,	cBuff:dword
			      C File_Write	proto	near,	hFile:word,	iSize:word,	cBuff:dword
			      C File_Seek	proto	near,	hFile:word,	iControl:BYTE,	dOffset	:dword
			      C 
			      C ChangeExt			proto	near,	cFilename:dword,cExt:dword
			      C Change_Current_Directory	proto	near,	cDirname:dword
			      C 
			      C File_Err	proto	near
			      C 
			      C 
			      C 
			      C ASC2HEX8	proto	near
			      C ASC2HEX16	proto	near
			      C HEX2ASC8	proto	near
			      C HEX2ASC16	proto	near
			      C FH2A8		proto	near
			      C FH2A16		proto	near
			      C H2A_F		proto	near,	iValue	:WORD,	iForm	:WORD
			      C H2A8		proto	near
			      C dat2hex8	proto	near
			      C dat2hex16	proto	near
			      C 
			      C 
			      C 

				.dosseg

				.stack	1000h

 0000				.data?

 0000 0000			pWSC_File	dw	?	;アドレス管理(p)

				;=======================================================================|
				;				Start Up				|
				;=======================================================================|
 0000				.code
					.startup
 0100			   *@Startup:
 0100  8C C8				mov	ax,cs
 0102  8E D0				mov	ss,ax
 0104  BC 1000 R			mov	sp,offset DGROUP:STACK
					invoke	ComSmole,	sp	;メモリの最小化
 0107  54		   *	    push   sp
 0108  E8 0000 E	   *	    call   ComSmole

 010B  FC				cld

 010C  E8 00FB				call	_main

					.exit	0
 010F  B8 4C00		   *	    mov    ax, 04C00h
 0112  CD 21		   *	    int    021h

				;---------------------------------------------------------------|
				;		エラー処理					|
				;---------------------------------------------------------------|
				;引数								|
				;	dx	表示文字列（エラー内容）			|
				;---------------------------------------------------------------|
 0114				PRINT_ERR:
 0114  0E				push	cs			;
 0115  1F				pop	ds			;
 0116  B4 09				MOV	AH,09H			;
 0118  CD 21				INT	21H			;
					.exit	255			;
 011A  B8 4CFF		   *	    mov    ax, 04CFFh
 011D  CD 21		   *	    int    021h

				;=======================================================================|
				;				Start					|
				;=======================================================================|
				include	wtd_ver.inc	;WTD Version infomation
			      C ;=======================================================================|
			      C ;									|
			      C ;		Wander Swan Total Sound Driver				|
			      C ;				IL Struct define			|
			      C ;				IL Function Routine			|
			      C ;					Programmed by			|
			      C ;						A.Watanabe		|
			      C ;									|
			      C ;=======================================================================|
 = '1.0d',0		      C WtdIL_Version		equ	'1.0d',0	;文字列
 = 010D			      C WTdIL_Version_N		equ	010dh		;数値
			      C 
				include	wtd_def.inc	;WTD Define infomation
			      C ;=======================================================================|
			      C ;									|
			      C ;		Wander Swan Total Sound Driver				|
			      C ;				define file				|
			      C ;					for Assemble Language		|
			      C ;									|
			      C ;					Programmed by			|
			      C ;						A.Watanabe		|
			      C ;									|
			      C ;=======================================================================|
			      C ;****************************************************************
			      C ;*								*
			      C ;*			マクロ定義				*
			      C ;*								*
			      C ;****************************************************************
			      C ;===============================================================|
			      C ;	マクロ	ワークエリアのアドレスを取得する		|
			      C ;===============================================================|
			      C ;	●マクロ書式						|
			      C ;		WTD_WorkGet	reg1,reg2			|
			      C ;	●引数							|
			      C ;		DS	DGROUP					|
			      C ;	●返値							|
			      C ;		reg1	Segment Address				|
			      C ;		reg2	Offset  Address				|
			      C ;===============================================================|
			      C WTD_WorkGet	macro	seg,off		;
			      C ifdef	library	;------------------------	;※　ライブラリ版のみ必要
			      C 
			      C ifdef	IRAM	;---------------		;D-GROUP ＝ I-RAMの場合
			      C 		push	IRAM_Segment		;
			      C 		pop	seg			;
			      C 		mov	off,offset DGROUP:_WTD_Work
			      C 
			      C else	;-----------------------		;D-GROUP ≠ S-RAMの場合
			      C 		push	SRAM_Segment		;（WonderWitch等）
			      C 		pop	seg			;
			      C 		mov	off,offset DGROUP:_WTD_Work
			      C endif	;-----------------------
			      C 
			      C else	;--------------------------------	;WonderWitch版
			      C 		push	SRAM_Segment		;
			      C 		pop	seg			;
			      C 		mov	off,ds:[ProcContext_heap]
			      C endif	;--------------------------------
			      C 		endm				;
			      C 
			      C ;****************************************************************
			      C ;*								*
			      C ;*			定数					*
			      C ;*								*
			      C ;****************************************************************
			      C ;===============================================================|
			      C ;		ハードウェア割り込み				|
			      C ;===============================================================|
 = INT_HARDHAEW_VECTOR_BASE   C InterruptVectorBase_WW	equ	INT_HARDHAEW_VECTOR_BASE	;WonderWitch
 = InterruptVectorBase_WW     C InterruptVectorBase	equ	InterruptVectorBase_WW		;割り込みベクタ
			      C 
			      C ;===============================================================|
			      C ;		Wander Swan Segment Address			|
			      C ;===============================================================|
			      C ;セグメントアドレス定義
 = 0000			      C IRAM_Segment		equ	0000h			;本体RAM
 = BANK_SRAM_ADDRESS	      C SRAM_Segment		equ	BANK_SRAM_ADDRESS	;SRAM
 = BANK_ROM0_ADDRESS	      C FROM_Segment		equ	BANK_ROM0_ADDRESS	;ROM
			      C 
			      C ;===============================================================|
			      C ;		本体RAM Work Address				|
			      C ;===============================================================|
			      C ;CommEnpty_intvector	equ	000a0h		;割り込みベクタ(028h×4)
			      C ;Hblank_intvector	equ	000bch		;割り込みベクタ(02fh×4)
			      C 
 = 0180			      C IRAM_SoundVoiceTable_WW	equ	00180h			;WonderWitch設定
 = IRAM_SoundVoiceTable_WW    C IRAM_SoundVoiceTable	equ	IRAM_SoundVoiceTable_WW	;音色テーブル
			      C 
			      C ;===============================================================|
			      C ;		ワーク領域アドレス				|
			      C ;===============================================================|
			      C ;構造体位置
 = 0000			      C WTD_WorkAdd_User	equ	0000h		;ユーザ用ワーク
 = 0100			      C WTD_WorkAdd_Wave	equ	0100h		;音色
 = 0200			      C WTD_WorkAdd_Emb		equ	0200h		;エンベロープ
 = 0380			      C WTD_WorkAdd_System	equ	0380h		;パート共通構造体
			      C 
 = 0400			      C WTD_WorkAdd_Ech0	equ	0400h		;Effect ch1
 = 0480			      C WTD_WorkAdd_Ech1	equ	0480h		;Effect ch2
 = 0500			      C WTD_WorkAdd_Ech2	equ	0500h		;Effect ch3
 = 0580			      C WTD_WorkAdd_PCM		equ	0580h		;Effect PCM Voice
			      C 
 = 0600			      C WTD_WorkAdd_Ch0		equ	0600h		;ch0
 = 0680			      C WTD_WorkAdd_Ch1		equ	0680h		;ch1
 = 0700			      C WTD_WorkAdd_Ch2		equ	0700h		;ch2
 = 0780			      C WTD_WorkAdd_Ch3		equ	0780h		;ch3
 = 0800			      C WTD_WorkAdd_Ch4		equ	0800h		;ch4
 = 0880			      C WTD_WorkAdd_Ch5		equ	0880h		;ch5
 = 0900			      C WTD_WorkAdd_Ch6		equ	0900h		;ch6
 = 0980			      C WTD_WorkAdd_Ch7		equ	0980h		;ch7
 = 0A00			      C WTD_WorkAdd_Ch8		equ	0a00h		;ch8
 = 0A80			      C WTD_WorkAdd_Ch9		equ	0a80h		;ch9
 = 0B00			      C WTD_WorkAdd_Ch10	equ	0b00h		;ch10
 = 0B80			      C WTD_WorkAdd_Ch11	equ	0b80h		;ch11
 = 0C00			      C WTD_WorkAdd_Ch12	equ	0c00h		;ch12
 = 0C80			      C WTD_WorkAdd_Ch13	equ	0c80h		;ch13
 = 0D00			      C WTD_WorkAdd_Ch14	equ	0d00h		;ch14
 = 0D80			      C WTD_WorkAdd_Ch15	equ	0d80h		;ch15
 = 0E00			      C WTR_WorkAdd_Ch16	equ	0e00h		;ch16
 = 0E80			      C WTD_WorkAdd_Ch17	equ	0e80h		;ch17
 = 0F00			      C WTD_WorkAdd_Ch18	equ	0f00h		;ch18
 = 0F80			      C WTD_WorkAdd_Ch19	equ	0f80h		;ch19
			      C 
 = 0080			      C WTD_WorkChSize		equ	080h		;ワークのサイズ
 = 1000			      C WTD_WorkSize		equ	1000h		;ワークのサイズ
			      C 
 = WTD_WorkSize		      C WTD_WorkAdd_End		equ	WTD_WorkSize	;ワークの最後＋１
			      C 
			      C ;****************************************************************
			      C ;*								*
			      C ;*			構造体定義				*
			      C ;*								*
			      C ;****************************************************************
			      C ;===============================================================|
			      C ;		Micro Soft  RIFF and Wave data formats		|
			      C ;===============================================================|
			      C ;構造体定義 RIFF Header
 000D			      C Riff			struc			;
 0000  0004 [		      C Riff_Head		db	4	dup(?)	;'RIFF'
        00
       ]
 0004  00000000		      C Riff_Size		dd	?		;File Size(全体-8)
 0008  0004 [		      C Riff_Type		db	4	dup(?)	;'WAVE'
        00
       ]
 000C  00		      C Riff_Data		db	?		;データ
			      C Riff			ends
			      C 
			      C ;構造体定義	RIFF struct
 0009			      C RiffHed			struc			;
 0000  0004 [		      C RiffHed_Head		db	4	dup(?)	;ヘッダ
        00
       ]
 0004  00000000		      C RiffHed_Size		dd	?		;ヘッダのデータのサイズ
 0008  00		      C RiffHed_Data		db	?		;ヘッダのデータ
			      C RiffHed			ends			;
			      C 
			      C ;構造体定義	WAVE fmt
 0018			      C WaveFmt			struc			;
 0000  0004 [		      C WaveFmt_Head		db	4	dup(?)	;'fmt '
        00
       ]
 0004  00000000		      C WaveFmt_Size		dd	?		;16	[byte]
 0008  0000		      C WaveFmt_Type		dw	?		;1	(wave)
 000A  0000		      C WaveFmt_Channel		dw	?		;1	(mono)
 000C  00000000		      C WaveFmt_SamplingRate	dd	?		;11025	[Hz]
 0010  00000000		      C WaveFmt_SamplingSec	dd	?		;11025	[Byte]
 0014  0000		      C WaveFmt_DataSize	dw	?		;1	[Byte]
 0016  0000		      C WaveFmt_ChannelSize	dw	?		;8	[bit]
			      C WaveFmt			ends			;
			      C 
			      C ;構造体定義	WAVE Data
 0009			      C WaveData		struc			;
 0000  0004 [		      C WaveData_Head		db	4	dup(?)	;'data'
        00
       ]
 0004  00000000		      C WaveData_Size		dd	?		;Data Size
 0008  00		      C WaveData_Data		db	?		;wave data
			      C WaveData		ends			;
			      C 
			      C ;===============================================================|
			      C ;		パート個別ワーク構造体				|
			      C ;===============================================================|
			      C ;構造体定数定義
 = WTD_SweepLevel	      C WTD_NoiseMode		equ	WTD_SweepLevel	;
 = WTD_Program		      C WTD_Voice		equ	WTD_Program	;
 = WTD_ProgramRate	      C WTD_VoiceRate		equ	WTD_ProgramRate	;
 = WTD_ProgramCnt	      C WTD_VoiceCnt		equ	WTD_ProgramCnt	;
 = WTD_Program1st	      C WTD_Voice1st		equ	WTD_Program1st	;
 = WTD_Program2nd	      C WTD_Voice2nd		equ	WTD_Program2nd	;
 = WTD_Program3rd	      C WTD_Voice3rd		equ	WTD_Program3rd	;
 = WTD_Bend		      C WTD_Frection		equ	WTD_Bend	;
 = WTD_BendSet		      C WTD_FrectionSet		equ	WTD_BendSet	;
 = WTD_ExprPanSet	      C WTD_Velocity		equ	WTD_ExprPanSet	;
 = WTD_LoopCount	      C WTD_PcmAddress		equ	WTD_LoopCount	;発生中アドレス
 = WTD_LoopCount+4	      C WTD_PcmSize		equ	WTD_LoopCount+4	;発生終了アドレス
			      C ;---------------------------------------------------------------
			      C ;パート個別構造体定義
 007A			      C WTD			struc			;各パート個別用	
 0000  0000		      C WTD_FlagControl		dw	?		;00-01	フラグ
 0002  00		      C WTD_FlagTai		db	?		;02	タイフラグ
 0003  00		      C WTD_FlagSharp		db	?		;03	#フラグ
 0004  00		      C WTD_FlagFlat		db	?		;04	bフラグ
 0005  00		      C WTD_Channel		db	?		;05	ﾁｬﾝﾈﾙ/ﾄﾗｯｸ
 0006  0000		      C WTD_Address		dw	?		;06-07	演奏中のｱﾄﾞﾚｽ
 0008  0008 [		      C WTD_LoopCount		db	8	dup(?)	;08-0F	ループ回数/PCM Address
        00
       ]
 0010  00		      C WTD_LoopCountPointer	db	?		;10	上記ﾎﾟｲﾝﾀ
 0011  00		      C WTD_Program		db	?		;11	出力した音色
 0012  00		      C WTD_SweepLevel		db	?		;12	ｽｳｨｰﾌﾟ値/ﾉｲｽﾞﾓｰﾄﾞ
 0013  00		      C WTD_SweepTime		db	?		;13	ｽｳｨｰﾌﾟ時間
 0014  0000		      C WTD_Leng		dw	?		;14-15	音長
 0016  0000		      C WTD_LengCounter		dw	?		;16-17	音長カウンター
 0018  0000		      C WTD_LengDefault		dw	?		;18-19	ﾃﾞﾌｫﾙﾄの音長
 001A  0000		      C WTD_KeyOffTime		dw	?		;1A-1B	ｹﾞｰﾄﾀｲﾑ制御値
 001C  0000		      C WTD_KeyOnDelay		dw	?		;1C-1D	ｷｰｵﾝﾃﾞｨﾚｲ
 001E  00		      C WTD_KeyShift		db	?		;1E	移調値
 001F  00		      C WTD_Key			db	?		;1F	音程
 0020  0008 [		      C WTD_KeySet		db	8	dup(?)	;20-27	出力した音程
        00
       ]
 0028  00		      C WTD_KeySetPointer	db	?		;28	上記ﾎﾟｲﾝﾀ
 0029  00		      C WTD_AcsentVelocity	db	?		;29	アクセント値
 002A  0000		      C WTD_BendSet		dw	?		;2A-2B	出力した周波数
 002C  0000		      C WTD_Bend		dw	?		;2C-2D	指定周波数
 002E  0000		      C WTD_BendDetune		dw	?		;2E-2F	ディチューン
 0030  00		      C WTD_BendLfoDecayRate	db	?		;30	LFOディケイレイト
 0031  00		      C WTD_BendLfoSpeedRate	db	?		;31	LFOスピード
 0032  0000		      C WTD_BendLfoLevel	dw	?		;32-33	LFO変位ﾚﾍﾞﾙ
 0034  00		      C WTD_BendLfoCount	db	?		;34	LFO変化回数
 0035  00		      C WTD_BendLfoRateCounter	db	?		;35	LFOレイト用カウンタ
 0036  0000		      C WTD_BendLfoLevelSet	dw	?		;36-37	LFO現在の変位ﾚﾍﾞﾙ
 0038  00		      C WTD_BendLfoCountCounter	db	?		;38	LFO回数用カウンタ
 0039  00		      C WTD_BendEmbAddress	db	?		;39	EMB番号（ｱﾄﾞﾚｽ）
 003A  00		      C WTD_BendEmbRate		db	?		;3A	EMBレイト
 003B  00		      C WTD_BendEmbCounter	db	?		;3B	EMBカウンター
 003C  00		      C WTD_BendEmbMaxMin	db	?		;3C	EMB最大／最小値
 003D  00		      C WTD_BendEmbLevelSet	db	?		;3D	EMB変位ﾚﾍﾞﾙ
 003E  00		      C WTD_ReleaseVolume	db	?		;3E	KeyOff時の音量
 003F  00		      C WTD_ExprPanSet		db	?		;3F	出力/ｳﾞｪﾛｼﾃｨｰ
 0040  00		      C WTD_ExprSet		db	?		;40	出力音量/ｴｸｽﾌﾟﾚｯｼｮﾝ
 0041  00		      C WTD_Expr		db	?		;41	音量/ｴｸｽﾌﾟﾚｯｼｮﾝ
 0042  0000		      C WTD_ExprDetune		dw	?		;42-43	音量増減値
 0044  00		      C WTD_ExprLfoDecayRate	db	?		;44	LFOディケイレイト
 0045  00		      C WTD_ExprLfoSpeedRate	db	?		;45	LFOスピード
 0046  0000		      C WTD_ExprLfoLevel	dw	?		;46-47	LFO変位ﾚﾍﾞﾙ
 0048  00		      C WTD_ExprLfoCount	db	?		;48	LFO変化回数
 0049  00		      C WTD_ExprLfoRateCounter	db	?		;49	LFOレイト用カウンタ
 004A  0000		      C WTD_ExprLfoLevelSet	dw	?		;4A-4B	LFO現在の変位ﾚﾍﾞﾙ
 004C  00		      C WTD_ExprLfoCountCounter	db	?		;4C	LFO回数用カウンタ
 004D  00		      C WTD_ExprEmbAddress	db	?		;4D	EMB番号（ｱﾄﾞﾚｽ）
 004E  00		      C WTD_ExprEmbRate		db	?		;4E	EMBレイト
 004F  00		      C WTD_ExprEmbCounter	db	?		;4F	EMBカウンター
 0050  00		      C WTD_ExprEmbMaxMin	db	?		;50	EMB最大／最小値
 0051  00		      C WTD_ExprEmbLevelSet	db	?		;51	EMB変位ﾚﾍﾞﾙ
 0052  00		      C WTD_WorkAddress		db	?		;52	ワークｱﾄﾞﾚｽ上位8BIT
 0053  00		      C WTD_OctaveSet		db	?		;53	出力したオクターブ
 0054  00		      C WTD_Octave		db	?		;54	指定オクターブ
 0055  00		      C WTD_GateTime8		db	?		;55	ｹﾞｰﾄﾀｲﾑ（Q,U)
 0056  0000		      C WTD_GateTimeStepLast	dw	?		;56-57	ｹﾞｰﾄﾀｲﾑ(q)
 0058  0000		      C WTD_GateTimeStepFirst	dw	?		;58-59	ｹﾞｰﾄﾀｲﾑ(u)
 005A  00		      C WTD_VolumeUpDown	db	?		;5A	相対ボリュームの増減値
 005B  0000		      C WTD_ModDecay		dw	?		;5B-5C	ﾓｼﾞｭﾚｰｼｮﾝ ﾃﾞｨｹｲﾚｲﾄ
 005D  00		      C WTD_ModLevel		db	?		;5D	ﾓｼﾞｭﾚｰｼｮﾝ ﾚﾍﾞﾙ
 005E  00		      C WTD_ModLevelSet		db	?		;5E	現在のﾓｼﾞｭﾚｰｼｮﾝ ﾚﾍﾞﾙ
 005F  00		      C WTD_Null_5F		db	?		;5F	未使用
 0060  00		      C WTD_PanSet		db	?		;60	出力パンポット
 0061  00		      C WTD_Pan			db	?		;61	パンポット
 0062  0000		      C WTD_PanDetune		dw	?		;62-63	音量増減値
 0064  00		      C WTD_PanLfoDecayRate	db	?		;64	LFOディケイレイト
 0065  00		      C WTD_PanLfoSpeedRate	db	?		;65	LFOスピード
 0066  0000		      C WTD_PanLfoLevel		dw	?		;66-67	LFO変位ﾚﾍﾞﾙ
 0068  00		      C WTD_PanLfoCount		db	?		;68	LFO変化回数
 0069  00		      C WTD_PanLfoRateCounter	db	?		;69	LFOレイト用カウンタ
 006A  0000		      C WTD_PanLfoLevelSet	dw	?		;6A-6B	LFO現在の変位ﾚﾍﾞﾙ
 006C  00		      C WTD_PanLfoCountCounter	db	?		;6C	LFO回数用カウンタ
 006D  00		      C WTD_PanEmbAddress	db	?		;6D	EMB番号（ｱﾄﾞﾚｽ）
 006E  00		      C WTD_PanEmbRate		db	?		;6E	EMBレイト
 006F  00		      C WTD_PanEmbCounter	db	?		;6F	EMBカウンター
 0070  00		      C WTD_PanEmbMaxMin	db	?		;60	EMB最大／最小値
 0071  00		      C WTD_PanEmbLevelSet	db	?		;61	EMB変位ﾚﾍﾞﾙ
 0072  0000		      C WTD_ProgramRate		dw	?		;62-63	音色を変える。
 0074  00		      C WTD_Program1st		db	?		;64	音色の初期値
 0075  00		      C WTD_Program2nd		db	?		;65	経時変化
 0076  00		      C WTD_Program3rd		db	?		;66	KeyOff後音色
 0077  00		      C WTD_ProgramDecay	db	?		;67	経時変化２
 0078  0000		      C WTD_ProgramDecayRate	dw	?		;68-69	音色を変える２
			      C 
			      C WTD			ends
			      C ;---------------------------------------------------------------
			      C ;構造体位置
 = WTD_BendLfoDecayRate	      C WTD_BendLFO		equ	WTD_BendLfoDecayRate	;ChLFO構造体先頭
 = WTD_ExprLfoDecayRate	      C WTD_ExprLFO		equ	WTD_ExprLfoDecayRate	;ChLFO構造体先頭
 = WTD_PanLfoDecayRate	      C WTD_PanLFO		equ	WTD_PanLfoDecayRate	;ChLFO構造体先頭
 = WTD_BendEmbAddress	      C WTD_BendEmb		equ	WTD_BendEmbAddress	;ChEmb構造体先頭
 = WTD_ExprEmbAddress	      C WTD_ExprEmb		equ	WTD_ExprEmbAddress	;ChEmb構造体先頭
 = WTD_PanEmbAddress	      C WTD_PanEmb		equ	WTD_PanEmbAddress	;ChEmb構造体先頭
			      C 
			      C ;ChLFO構造体
 0009			      C WTD_ChLfo		struc
 0000  00		      C WTD_ChLfo_DecayRate	db	?		;	LFOディケイレイト
 0001  00		      C WTD_ChLfo_SpeedRate	db	?		;	LFOスピード
 0002  0000		      C WTD_ChLfo_Level		dw	?		;	LFO変位ﾚﾍﾞﾙ
 0004  00		      C WTD_ChLfo_Count		db	?		;	LFO変化回数
 0005  00		      C WTD_ChLfo_RateCounter	db	?		;	LFOレイト用カウンタ
 0006  0000		      C WTD_ChLfo_LevelSet	dw	?		;	LFO現在の変位ﾚﾍﾞﾙ
 0008  00		      C WTD_ChLfo_CountCounter	db	?		;	LFO回数用カウンタ
			      C WTD_ChLfo		ends
			      C ;ChEmb構造体
 0005			      C WTD_ChEmb		struc
 0000  00		      C WTD_ChEmb_Address	db	?		;	EMB番号（ｱﾄﾞﾚｽ）
 0001  00		      C WTD_ChEmb_Rate		db	?		;	EMBレイト
 0002  00		      C WTD_ChEmb_Counter	db	?		;	EMBカウンター
 0003  00		      C WTD_ChEmb_MaxMin	db	?		;	EMB最大／最小値
 0004  00		      C WTD_ChEmb_LevelSet	db	?		;	EMB変位ﾚﾍﾞﾙ
			      C WTD_ChEmb		ends
			      C ;---------------------------------------------------------------
			      C ;フラグビット・セット
 = 0001			      C WTD_Ctrl_BendLfo	equ	00001h		;音程ＬＦＯスイッチ
 = 0002			      C WTD_Ctrl_BendEmb	equ	00002h		;音程エンベロープスイッチ
 = 0004			      C WTD_Ctrl_ExprLfo	equ	00004h		;音量ＬＦＯスイッチ
 = 0008			      C WTD_Ctrl_ExprEmb	equ	00008h		;音量エンベロープスイッチ
 = 0010			      C WTD_Ctrl_PanLfo		equ	00010h		;パンＬＦＯスイッチ
 = 0020			      C WTD_Ctrl_PanEmb		equ	00020h		;パンエンベロープスイッチ
 = 0040			      C WTD_Ctrl_Acsent		equ	00040h		;次の音階はアクセント
 = 0080			      C WTD_Ctrl_EmbFreq	equ	00080h		;音程エンベロープ 上位bit
 = 0100			      C WTD_Ctrl_EmbVol		equ	00100h		;音量エンベロープ 上位bit
 = 0200			      C WTD_Ctrl_EmbPan		equ	00200h		;パンエンベロープ 上位bit
 = 0400			      C WTD_Ctrl_Vol0		equ	00400h		;音量＝０ & Relase
 = 0800			      C WTD_Ctrl_WorkSw		equ	00800h		;次のコマンドは、ワーク参照
 = 1000			      C WTD_Ctrl_WorkCy		equ	01000h		;ワーク演算結果、オーバーフロー
 = 2000			      C WTD_Ctrl_WorkZe		equ	02000h		;ワーク演算結果、０になった。
 = 4000			      C WTD_Ctrl_Effect		equ	04000h		;このパートは効果音か？
 = 8000			      C WTD_Ctrl_PlayEnd	equ	08000h		;演奏終了
			      C ;---------------------------------------------------------------
			      C ;フラグビット・リセット
 = FFFE			      C WTD_Ctrl_BendLfoR	equ	0fffeh		;音程ＬＦＯスイッチ
 = FFFD			      C WTD_Ctrl_BendEmbR	equ	0fffdh		;音程エンベロープスイッチ
 = FFFB			      C WTD_Ctrl_ExprLfoR	equ	0fffbh		;音量ＬＦＯスイッチ
 = FFF7			      C WTD_Ctrl_ExprEmbR	equ	0fff7h		;音量エンベロープスイッチ
 = FFEF			      C WTD_Ctrl_PanLfoR	equ	0ffefh		;パンＬＦＯスイッチ
 = FFDF			      C WTD_Ctrl_PamEmbR	equ	0ffdfh		;パンエンベロープスイッチ
 = FFBF			      C WTD_Ctrl_AcsentR	equ	0ffbfh		;次の音階はアクセント
 = FF7F			      C WTD_Ctrl_EmbFreqR	equ	0ff7fh		;音程エンベロープ 上位bit
 = FEFF			      C WTD_Ctrl_EmbVolR	equ	0feffh		;音量エンベロープ 上位bit
 = FDFF			      C WTD_Ctrl_EmbPanR	equ	0fdffh		;パンエンベロープ 上位bit
 = FBFF			      C WTD_Ctrl_Vol0R		equ	0fbffh		;音量＝０ & Relase
 = F7FF			      C WTD_Ctrl_WorkSwR	equ	0f7ffh		;次のコマンドは、ワーク参照
 = EFFF			      C WTD_Ctrl_WorkCyR	equ	0efffh		;ワーク演算結果、オーバーフロー
 = DFFF			      C WTD_Ctrl_WorkZeR	equ	0dfffh		;ワーク演算結果、０になった。
 = BFFF			      C WTD_Ctrl_EffectR	equ	0bfffh		;このパートは効果音か？
 = 7FFF			      C WTD_Ctrl_PlayEndR	equ	07fffh		;演奏終了
			      C 
			      C ;===============================================================|
			      C ;		パート共通ワーク構造体				|
			      C ;===============================================================|
 0034			      C WTD_Sys			struc			;システム全体	
 0000  0000		      C WTD_Sys_Flag		dw	?		;00	Flag
 0002  0000		      C WTD_Sys_ProgramOffset	dw	?		;02	Program Offset Address
 0004  0000		      C WTD_Sys_ProgramSegment	dw	?		;04	Program Segment Address
 0006  0000		      C WTD_Sys_MusicOffset	dw	?		;06	Music Offset Address
 0008  0000		      C WTD_Sys_MusicSegment	dw	?		;08	Music Segment Address
 000A  0000		      C WTD_Sys_EffectOffset	dw	?		;0a	Effect Offset Address
 000C  0000		      C WTD_Sys_EffectSegment	dw	?		;0c	Effect Segment Address
 000E  0000		      C WTD_Sys_PcmOffset	dw	?		;0e	Pcm Offset Address
 0010  0000		      C WTD_Sys_PcmSegment	dw	?		;10	Pcm Segment Address
 0012  0000		      C WTD_Sys_StayOutMask	dw	?		;12	常駐解除禁止
 0014  0002 [		      C WTD_Sys_OldIntvector	dw	2	dup(?)	;14-17	前の割り込みベクタ
        0000
       ]
 0018  0002 [		      C WTD_Sys_OldIntvectorCom	dw	2	dup(?)	;18-1B	前の割り込みベクタ
        0000
       ]
 001C  0000		      C WTD_Sys_ComFIFO_Offset	dw	?		;1C-1D	FIFO Offset Address
 001E  0000		      C WTD_Sys_ComFIFO_Segment	dw	?		;1E-1F	FIFO Segment Address
 0020  00		      C WTD_Sys_Null_20		db	?		;20	未使用
 0021  00		      C WTD_Sys_VolumeMusic	db	?		;21	ソフトウェア音量 演奏
 0022  00		      C WTD_Sys_VolumeEffect	db	?		;22	ソフトウェア音量 効果音
 0023  00		      C WTD_Sys_VolumePCM	db	?		;23	ソフトウェア音量 PCM
 0024  0000		      C WTD_Sys_Tempo		dw	?		;24	テンポ
 0026  0000		      C WTD_Sys_TempoCounter	dw	?		;26	テンポカウンタ
 0028  00		      C WTD_Sys_MusicPart	db	?		;28	演奏のパート数(最大20)
 0029  00		      C WTD_Sys_EffectPart	db	?		;29	効果音のパート数(最大3)
 002A  0000		      C WTD_Sys_ComFIFO_Cnt	dw	?		;2A-2B	FIFO ポインタ 書き込み
 002C  0000		      C WTD_Sys_ComFIFO_Adr	dw	?		;2C-2D	FIFO ポインタ 送信
 002E  0000		      C WTD_Sys_ComFIFO_Size	dw	?		;2E-2F	FIFO サイズ
 0030  00		      C WTD_Sys_RunningStatus	db	?		;30	MIDI Running Status
 0031  00		      C WTD_Sys_InterruptBase	db	?		;31	割り込みベースベクタ
 0032  0000		      C WTD_Sys_VoiceTableOffset dw	?		;32	音色Table(IRAM)Address
			      C WTD_Sys			ends			
			      C ;---------------------------------------------------------------
			      C ;フラグビット・セット
 = 0001			      C WTD_Sys_Music		equ	00001h		;演奏中
 = 0002			      C WTD_Sys_Effect		equ	00002h		;効果音発声中
 = 0004			      C WTD_Sys_Pcm		equ	00004h		;PCMボイス発生中
 = 0008			      C WTD_Sys_3		equ	00008h		;	(元：PCM Voice終了)
 = 0010			      C WTD_Sys_Midi		equ	00010h		;MIDIモード(システムでは未使用)
 = 0020			      C WTD_Sys_5		equ	00020h		;
 = 0040			      C WTD_Sys_6		equ	00040h		;
 = 0080			      C WTD_Sys_TimerEmulate	equ	00080h		;タイマーをエミュレート中
 = 0100			      C WTD_Sys_ChannelMode1	equ	00100h		;チャンネルモード ch1
 = 0200			      C WTD_Sys_ChannelMode2	equ	00200h		;チャンネルモード ch2
 = 0400			      C WTD_Sys_ChannelMode3	equ	00400h		;チャンネルモード ch3
 = 0800			      C WTD_Sys_ChannelMode4	equ	00800h		;チャンネルモード ch4
 = 1000			      C WTD_Sys_EffectMask1	equ	01000h		;効果音パートマスク ch1
 = 2000			      C WTD_Sys_EffectMask2	equ	02000h		;効果音パートマスク ch2
 = 4000			      C WTD_Sys_EffectMask3	equ	04000h		;効果音パートマスク ch3
 = 8000			      C WTD_Sys_EffectMask4	equ	08000h		;効果音パートマスク ch4
			      C ;---------------------------------------------------------------
			      C ;フラグビット・リセット
 = FFFE			      C WTD_Sys_MusicR		equ	0fffeh		;演奏中
 = FFFD			      C WTD_Sys_EffectR		equ	0fffdh		;効果音発声中
 = FFFB			      C WTD_Sys_PcmR		equ	0fffbh		;PCMボイス発生中
 = FFF7			      C WTD_Sys_3R		equ	0fff7h		;	(元：PCM Voice終了)
 = FFEF			      C WTD_Sys_MidiR		equ	0ffefh		;MIDIモード(システムでは未使用)
 = FFDF			      C WTD_Sys_5R		equ	0ffdfh		;
 = FFBF			      C WTD_Sys_6R		equ	0ffbfh		;
 = FF7F			      C WTD_Sys_TimerEmulateR	equ	0ff7fh		;タイマーをエミュレート中
 = FEFF			      C WTD_Sys_ChannelMode1R	equ	0feffh		;チャンネルモード ch1
 = FDFF			      C WTD_Sys_ChannelMode2R	equ	0fdffh		;チャンネルモード ch2
 = FBFF			      C WTD_Sys_ChannelMode3R	equ	0fbffh		;チャンネルモード ch3
 = F7FF			      C WTD_Sys_ChannelMode4R	equ	0f7ffh		;チャンネルモード ch4
 = EFFF			      C WTD_Sys_EffectMask1R	equ	0efffh		;効果音パートマスク ch1
 = DFFF			      C WTD_Sys_EffectMask2R	equ	0dfffh		;効果音パートマスク ch2
 = BFFF			      C WTD_Sys_EffectMask3R	equ	0bfffh		;効果音パートマスク ch3
 = 7FFF			      C WTD_Sys_EffectMask4R	equ	07fffh		;効果音パートマスク ch4
			      C 
			      C ;===============================================================|
			      C ;		ソフトウェアエンベロープ構造体			|
			      C ;===============================================================|
 0010			      C WTD_Emb			struc
 0000  00		      C WTD_Emb_AR		db	?		;00h	:Attack Rate
 0001  00		      C WTD_Emb_AS		db	?		;01h	:Attack Speed (001h)
 0002  00		      C WTD_Emb_AL		db	?		;02h	:Attack Level (0FFh)
 0003  00		      C WTD_Emb_FL		db	?		;03h	:First Level
 0004  00		      C WTD_Emb_DR		db	?		;04h	:Decay Rate
 0005  00		      C WTD_Emb_DS		db	?		;05h	:Decay Speed (081h)
 0006  00		      C WTD_Emb_DL		db	?		;06h	:Decay Level
 0007  00		      C WTD_Emb_Null1		db	?		;07h	:未使用
 0008  00		      C WTD_Emb_SR		db	?		;08h	:Sustain Rate
 0009  00		      C WTD_Emb_SS		db	?		;09h	:Sustain Speed (081h)
 000A  00		      C WTD_Emb_SL		db	?		;0Ah	:Sustain Level (000h)
 000B  00		      C WTD_Emb_Null2		db	?		;0Bh	:未使用
 000C  00		      C WTD_Emb_RR		db	?		;0Ch	:Relase Rate
 000D  00		      C WTD_Emb_RS		db	?		;0Dh	:Relase Speed (081h)
 000E  00		      C WTD_Emb_RL		db	?		;0Eh	:Relase Level (000h)
 000F  00		      C WTD_Emb_Null3		db	?		;0Fh	:未使用
			      C WTD_Emb			ends				
			      C 
			      C ;===============================================================|
			      C ;			曲データ構造体				|
			      C ;===============================================================|
 0012			      C WTD_Mus			struc
 0000  0004 [		      C WTD_Mus_Name		db	4	dup(?)	;00-03h	:選別子
        00
       ]
 0004  0000		      C WTD_Mus_Version		dw	?		;04-05h	:Version
 0006  0000		      C WTD_Mus_Extr		dw	?		;06-07h	:拡張ヘッダサイズ
 0008  00		      C WTD_Mus_Emb		db	?		;08h	:エンベロープ数量
 0009  00		      C WTD_Mus_Voice		db	?		;09h	:波形データ数量
 000A  00		      C WTD_Mus_Part		db	?		;0Ah	:パート数
 000B  00		      C WTD_Mus_TimeBase	db	?		;0Bh	:４部音符の分割数
 000C  0000		      C WTD_Mus_ExtrAdr		dw	?		;0Ch	:拡張ヘッダのアドレス
 000E  0000		      C WTD_Mus_DataAdr		dw	?		;0Eh	:データのアドレス
 0010  0000		      C WTD_Mus_PartAdr		dw	?		;10h	:曲データアドレス
			      C WTD_Mus			ends
			      C 
			      C ;===============================================================|
			      C ;			拡張ヘッダー構造体定義			|
			      C ;===============================================================|
 0000			      C WTD_MusEx		struc
			      C ;
			      C ;			現在、未使用
			      C ;
			      C WTD_MusEx		ends
			      C 
			      C 
				;include	WSMAKE.INC	;
				;===============================================================|
				;								|
				;		オプション処理					|
				;								|
				;===============================================================|
				;****************************************************************
				;*		オプションフラグ立て				*
				;****************************************************************
 0000				.const
 0000 83 49 83 76 83 56		OPTION_ERROR_MSG	db	'オプションが不正です。',0dh,0ah,24h
       83 87 83 93 82 AA
       95 73 90 B3 82 C5
       82 B7 81 42 0D 0A
       24
 011F				.code
 011F				OPTION_ERROR	proc	near
 011F  8D 16 0000 R			lea	dx,[OPTION_ERROR_MSG]
 0123  EB EF				jmp	PRINT_ERR
 0125				OPTION_ERROR	endp
				;****************************************************************
				;*		オプションフラグ立て				*
				;****************************************************************
 0019				.const
 0019 0D 0A			OP_HELP	DB	0DH,0AH
 001B  09 57 6F 6E 64 65		DB	"	WonderSwan ROM image maker",0DH,0AH
       72 53 77 61 6E 20
       52 4F 4D 20 69 6D
       61 67 65 20 6D 61
       6B 65 72 0D 0A
 0038  09 09 09 50 72 6F		DB	"			Programmed by  A.Watanabe",0DH,0AH
       67 72 61 6D 6D 65
       64 20 62 79 20 20
       41 2E 57 61 74 61
       6E 61 62 65 0D 0A
 0056  0D 0A				DB	0DH,0AH
 0058  09 20 1B 5B 33 32		DB	"	 [32;4m Filename[32;0m [m"
       3B 34 6D 20 46 69
       6C 65 6E 61 6D 65
       1B 5B 33 32 3B 30
       6D 20 1B 5B 6D
 0075  83 74 83 40 83 43		DB	"ファイルの読み込み",0DH,0AH
       83 8B 82 CC 93 C7
       82 DD 8D 9E 82 DD
       0D 0A
 0089  09 2F 3F 20 3A 83		DB	"	/? :ヘルプの表示",0DH,0AH
       77 83 8B 83 76 82
       CC 95 5C 8E A6 0D
       0A
 009C  24				DB	024H
 0125				.code
 0125				OPTION_HELP	proc	near
 0125  0E				push	cs
 0126  1F				pop	ds
 0127  8D 16 0019 R			lea	DX,[OP_HELP]		;表示
 012B  B4 09				MOV	AH,09H			;
 012D  CD 21				INT	21H			;
					.exit	0
 012F  B8 4C00		   *	    mov    ax, 04C00h
 0132  CD 21		   *	    int    021h
 0134				OPTION_HELP	endp			;
				;****************************************************************
				;*		オプション処理					*
				;****************************************************************
				;●引数								*
				;	ptFilename	ファイル名を入れるポインタ		*
				;●返り値							*
				;	ptFilename[]	オプション文字列で指定されたファイル名	*
				;●使用レジスタ							*
				;	ds:si		オプション文字列アドレス		*
				;	es:di		ptFilename				*
				;	ax		汎用					*
				;	cx		オプション文字列最終アドレス＋１	*
				;****************************************************************
 0134				.code
 0134				Op_	proc	near	uses ds es,
						ptFilename:DWORD	;ファイル名を入れるポインタ

					local	cHelp:BYTE		;ヘルプ表示の有無
					local	dotFlag:BYTE		;ファイル名の拡張子の有無

 0134  55		   *	    push   bp
 0135  8B EC		   *	    mov    bp, sp
 0137  83 C4 FE		   *	    add    sp, 0FFFEh
 013A  1E		   *	    push   ds
 013B  06		   *	    push   es
 013C  60				pusha

					;-----------------------
					;フラグ立て
 013D  33 C0				xor	ax,ax			;ax ← 0
 013F  C4 7E 04				les	di,ptFilename		;
 0142  AA				stosb				;先頭にだけ、0を入れておく。
 0143  88 46 FF				mov	cHelp,al		;
 0146  88 46 FE				mov	dotFlag,al		;

 0149  0E				push	cs			;
 014A  1F				pop	ds			;DS←CS
 014B  BE 0080				MOV	si,0080H		;BX←オプション文字列先頭アドレス−１
 014E  AC				lodsb				;AL←オプション文字数
 014F  03 C6				ADD	ax,si			;
 0151  8B C8				MOV	cx,ax			;CX←オープション文字列最終番地

				    .while	(cx>=si)
 0153  EB 6F		   *	    jmp    @C0001
 0155			   *@C0002:

 0155  AC				lodsb

					.if	(al<21h)
 0156  3C 21		   *	    cmp    al, 021h
 0158  73 04		   *	    jae    @C0003
						.continue
 015A  EB 68		   *	    jmp    @C0001

					.elseif	((al=='/')||(al=='-'))
 015C  EB 66		   *	    jmp    @C0006
 015E			   *@C0003:
 015E  3C 2F		   *	    cmp    al, '/'
 0160  74 04		   *	    je     @C0008
 0162  3C 2D		   *	    cmp    al, '-'
 0164  75 1D		   *	    jne    @C0007
 0166			   *@C0008:
						.if	(cx<si)
 0166  3B CE		   *	    cmp    cx, si
 0168  73 02		   *	    jae    @C000A
 016A  EB B3						JMP	OPTION_ERROR	;だったらエラー
						.endif

 016C			   *@C000A:
 016C  AC					lodsb
						.if	((al=='h')||(al=='H')||(al=='?'))
 016D  3C 68		   *	    cmp    al, 'h'
 016F  74 08		   *	    je     @C000D
 0171  3C 48		   *	    cmp    al, 'H'
 0173  74 04		   *	    je     @C000D
 0175  3C 3F		   *	    cmp    al, '?'
 0177  75 06		   *	    jne    @C000C
 0179			   *@C000D:
 0179  C6 46 FF FF					mov	cHelp,0FFh
						.else
 017D  EB 45		   *	    jmp    @C0010
 017F			   *@C000C:
 017F  EB 9E						JMP	OPTION_ERROR	;無かったらエラー
						.endif

					.else
 0181  EB 41		   *	    jmp    @C0011
 0183			   *@C0007:
 0183  C4 7E 04					les	di,ptFilename		;ファイル名を入れるポインタ
						.if	(byte ptr es:[di] != 0)
 0186  26: 80 3D 00	   *	    cmp    byte ptr es : [di], 000h
 018A  74 02		   *	    je     @C0012
 018C  EB 91						JMP	OPTION_ERROR	;ファイル名が２つ書いてあるよぉ〜
						.endif

 018E			   *@C0012:
 018E  4E					dec	si			;ポインタ一つ戻す
 018F  C6 46 FE 00				mov	dotFlag,0
						.while	(cx>=si)
 0193  EB 13		   *	    jmp    @C0014
 0195			   *@C0015:
 0195  AC						lodsb
							.if	(al == '.')
 0196  3C 2E		   *	    cmp    al, '.'
 0198  75 06		   *	    jne    @C0016
 019A  C6 46 FE 01						mov	dotFlag,1
							.elseif	(al < 21h)
 019E  EB 07		   *	    jmp    @C0018
 01A0			   *@C0016:
 01A0  3C 21		   *	    cmp    al, 021h
 01A2  73 03		   *	    jae    @C0019
 01A4  4E							dec	si
								.break		;21h未満だったら終わり。
 01A5  EB 05		   *	    jmp    @C001B
							.endif
 01A7			   *@C0019:
 01A7			   *@C0018:
 01A7  AA						stosb			;ファイル名セット
						.endw
 01A8			   *@C0014:
 01A8  3B CE		   *	    cmp    cx, si
 01AA  73 E9		   *	    jae    @C0015

						.if	(dotFlag==0)		;拡張子が定義されなかったら定義
 01AC			   *@C001B:
 01AC  80 7E FE 00	   *	    cmp    dotFlag, 000h
 01B0  75 0C		   *	    jne    @C001D
 01B2  B0 2E						mov	al,'.'
 01B4  AA						stosb
 01B5  B0 57						mov	al,'W'		;".WTD"にする。一応、大文字で。
 01B7  AA						stosb
 01B8  B0 54						mov	al,'T'
 01BA  AA						stosb
 01BB  B0 44						mov	al,'D'
 01BD  AA						stosb
						.endif

 01BE			   *@C001D:
 01BE  B0 00					mov	al,0			;
 01C0  AA					stosb
 01C1  B0 24					mov	al,24h			;
 01C3  AA					stosb
					.endif

				    .endw
 01C4			   *@C0011:
 01C4			   *@C0006:
 01C4			   *@C0010:
 01C4			   *@C0001:
 01C4  3B CE		   *	    cmp    cx, si
 01C6  73 8D		   *	    jae    @C0002

					;-----------------------
					;フラグに応じた処理
					;●ヘルプ
					.if	(cHelp != 0)
 01C8  80 7E FF 00	   *	    cmp    cHelp, 000h
 01CC  74 03		   *	    je     @C0020
 01CE  E9 FF54					jmp	OPTION_HELP		;
					.endif
 01D1			   *@C0020:

					;●ファイル処理
 01D1  C4 7E 04				les	di,ptFilename			;ファイル名があるポインタ
					.if	(byte ptr es:[di] != 0)
 01D4  26: 80 3D 00	   *	    cmp    byte ptr es : [di], 000h
 01D8  74 24		   *	    je     @C0022
						invoke	Change_Current_Directory,	addr es:[di]
 01DA  06		   *	    push   es
 01DB  8D 05		   *	    lea    ax,  es:[+di]
 01DD  50		   *	    push   ax
 01DE  E8 0000 E	   *	    call   Change_Current_Directory

						;オープン
						invoke	File_Open,			addr es:[di],	0
 01E1  6A 00		   *	    push   +00000h
 01E3  06		   *	    push   es
 01E4  8D 05		   *	    lea    ax,  es:[+di]
 01E6  50		   *	    push   ax
 01E7  E8 0000 E	   *	    call   File_Open
 01EA  50					push	ax

						;ロード
 01EB  2E: 8E 1E 0000 R				mov	ds,word ptr CS:[pWSC_File]
						invoke	File_Load,	ax,addr ds:0
 01F0  1E		   *	    push   ds
 01F1  6A 00		   *	    push   OFFSET ds:+00000h
 01F3  50		   *	    push   ax
 01F4  E8 0000 E	   *	    call   File_Load

						;クローズ
 01F7  58					pop	ax
						invoke	File_Close,	ax
 01F8  50		   *	    push   ax
 01F9  E8 0000 E	   *	    call   File_Close
					.else
 01FC  EB 03		   *	    jmp    @C0024
 01FE			   *@C0022:
 01FE  E9 FF24					jmp	OPTION_HELP	;ファイル名の指定が無ければ、
					.endif
 0201			   *@C0024:

 0201  61				popa
					RET				;RETURN
 0202  07		   *	    pop    es
 0203  1F		   *	    pop    ds
 0204  8B E5		   *	    mov    sp, bp
 0206  5D		   *	    pop    bp
 0207  C2 0004		   *	    ret    00004h
 020A				Op_	endp
				;=======================================================================|
				;									|
				;		Wander Swan Total Sound Driver				|
				;				MML Compiler Program			|
				;				Main Routine				|
				;									|
				;					Programmed by			|
				;						A.Watanabe		|
				;									|
				;=======================================================================|
 009D				.const
 009D 52 4F 4D 5F 49 4D		BIOS_FILE	db	'ROM_IMG.BIN',0,0ah,0dh,24h
       47 2E 42 49 4E 00
       0A 0D 24
 00AC 57 54 44 8C 60 8E		MUS_ERR		db	'WTD形式のデータではありません。'
       AE 82 CC 83 66 81
       5B 83 5E 82 C5 82
       CD 82 A0 82 E8 82
       DC 82 B9 82 F1 81
       42

 00CB 57 53 52 46		WSR_HEAD	db	"WSRF"
 00CF  0100					dw	0100h
 00D1  000A [					db	10	dup(0)
        00
       ]
 00DB EA			WSC_HEAD	db	0EAh
 00DC  0000					dw	00000h
 00DE  F000					dw	0F000h
 00E0  000B [					db	11	dup(0)
        00
       ]
 020A				.code
 020A				_main	proc	near

					local	Ext[3]:BYTE		;拡張子　変更用
					local	cFilename[134]:BYTE	;ファイル名

						;-------------------------------
						;■メモリオープン
 020A  55		   *	    push   bp
 020B  8B EC		   *	    mov    bp, sp
 020D  81 C4 FF76	   *	    add    sp, 0FF76h
						invoke	Memory_Open,	02000h	;
 0211  68 2000		   *	    push   +02000h
 0214  E8 0000 E	   *	    call   Memory_Open
 0217  2E: A3 0000 R				mov	word ptr cs:[pWSC_File],ax
 021B  8E C0					mov	es,ax			;ES←MML SEGMENT
 021D  BF 0000					mov	di,0			;es:di← 確保したセグメント
 0220  B9 8000					mov	cx,08000h		;
 0223  B8 0000					mov	ax,0			;
 0226  F3/ AB				rep	stosw				;０初期化
 0228  8C C0					mov	ax,es			;
 022A  05 1000					add	ax,01000h		;
 022D  8E C0					mov	es,ax			;
 022F  BF 0000					mov	di,0			;es:di← 確保したセグメント
 0232  B9 8000					mov	cx,08000h		;
 0235  B8 0000					mov	ax,0			;
 0238  F3/ AB				rep	stosw				;０初期化

						;-----------------------
						;■独自BIOSの読み込み

						;file_open(ROM_IMG.BIN)
						invoke	File_Open,	addr cs:[BIOS_FILE],	0
 023A  6A 00		   *	    push   +00000h
 023C  0E		   *	    push   cs
 023D  68 009D R	   *	    push   OFFSET cs:BIOS_FILE
 0240  E8 0000 E	   *	    call   File_Open
 0243  50					push	ax

						invoke	File_Load,	ax, addr es:0
 0244  06		   *	    push   es
 0245  6A 00		   *	    push   OFFSET es:+00000h
 0247  50		   *	    push   ax
 0248  E8 0000 E	   *	    call   File_Load

						;クローズ
 024B  58					pop	ax
						invoke	File_Close,	ax
 024C  50		   *	    push   ax
 024D  E8 0000 E	   *	    call   File_Close


						;-------------------------------
						;■オプション処理 ＆ ファイル読み込み
						invoke	Op_,	addr ss:cFilename	;オプションに記述されたファイル名を取得する。
 0250  16		   *	    push   ss
 0251  8D 86 FF77	   *	    lea    ax, byte  ptr ss:[bp]+077h
 0255  50		   *	    push   ax
 0256  E8 FEDB		   *	    call   Op_


						;-----------------------
						;■Wonder Swan ROM 設定
 0259  0E					push	cs
 025A  1F					pop	ds
 025B  8D 36 00CB R				lea	si, WSR_HEAD
 025F  BF FFE0					mov	di, 0FFE0h
 0262  B9 0010					mov	cx, 00010h
 0265  F3/ A5				rep	movsw

						;-----------------------
						;■ROMイメージの作成

						;WTD形式かチェック		;
 0267  2E: FF 36 0000 R				push	cs:[pWSC_File]		;
 026C  1F					pop	ds			;
 026D  33 D2					xor	dx, dx			;ds:dx← 確保したセグメント
 026F  33 DB					xor	bx, bx
						.if	(word ptr ds:[bx] != 'TW')
 0271  81 3F 5457	   *	    cmp    word ptr ds : [bx], 'TW'
 0275  74 12		   *	    je     @C0025
 0277  BA 0080					   mov	dx, 80h
 027A  8B DA					   mov	bx, dx
						   .if	(word ptr ds:[bx] != 'TW')
 027C  81 3F 5457	   *	    cmp    word ptr ds : [bx], 'TW'
 0280  74 07		   *	    je     @C0027
 0282  8D 16 00AC R					lea	dx, MUS_ERR
 0286  E9 FE8B						jmp	PRINT_ERR
						   .endif
						.endif
 0289			   *@C0027:
 0289			   *@C0025:

						;file_open("*.WSC")
 0289  C6 46 FD 57				mov	Ext[0],'W'		;
 028D  C6 46 FE 53				mov	Ext[1],'S'		;拡張子は"WTD"
 0291  C6 46 FF 43				mov	Ext[2],'C'		;
						invoke	ChangeExt,	addr ss:cFilename,addr ss:Ext
 0295  16		   *	    push   ss
 0296  8D 46 FD		   *	    lea    ax, byte  ptr ss:[bp]+0FDh
 0299  50		   *	    push   ax
 029A  16		   *	    push   ss
 029B  8D 86 FF77	   *	    lea    ax, byte  ptr ss:[bp]+077h
 029F  50		   *	    push   ax
 02A0  E8 0000 E	   *	    call   ChangeExt

						invoke	File_Create,	addr ss:cFilename,0
 02A3  6A 00		   *	    push   +00000h
 02A5  16		   *	    push   ss
 02A6  8D 86 FF77	   *	    lea    ax, byte  ptr ss:[bp]+077h
 02AA  50		   *	    push   ax
 02AB  E8 0000 E	   *	    call   File_Create

						;※※※　File_Write() は、 ax を壊さない

 02AE  B9 8000					mov	cx, 8000h
						invoke	File_Write,	ax, cx, ds::dx
 02B1  1E		   *	    push   ds
 02B2  52		   *	    push   dx
 02B3  51		   *	    push   cx
 02B4  50		   *	    push   ax
 02B5  E8 0000 E	   *	    call   File_Write
 02B8  03 D1					add	dx, cx
						invoke	File_Write,	ax, cx, ds::dx
 02BA  1E		   *	    push   ds
 02BB  52		   *	    push   dx
 02BC  51		   *	    push   cx
 02BD  50		   *	    push   ax
 02BE  E8 0000 E	   *	    call   File_Write
 02C1  33 D2					xor	dx, dx
						invoke	File_Write,	ax, cx, es::dx
 02C3  06		   *	    push   es
 02C4  52		   *	    push   dx
 02C5  51		   *	    push   cx
 02C6  50		   *	    push   ax
 02C7  E8 0000 E	   *	    call   File_Write
						invoke	File_Write,	ax, cx, es::cx
 02CA  06		   *	    push   es
 02CB  51		   *	    push   cx
 02CC  51		   *	    push   cx
 02CD  50		   *	    push   ax
 02CE  E8 0000 E	   *	    call   File_Write

						invoke	File_Close,	ax
 02D1  50		   *	    push   ax
 02D2  E8 0000 E	   *	    call   File_Close

						ret
 02D5  8B E5		   *	    mov    sp, bp
 02D7  5D		   *	    pop    bp
 02D8  C3		   *	    ret    00000h
 02D9				_main	endp
				;=======================================================================|
				;				End					|
				;=======================================================================|
					END
Microsoft (R) Macro Assembler Version 6.11		    04/22/12 02:03:05
WSMAKE.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

WTD_WorkGet  . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

RiffHed  . . . . . . . . . . . .	 0009
  RiffHed_Head . . . . . . . . .	 0000	     Byte
  RiffHed_Size . . . . . . . . .	 0004	     DWord
  RiffHed_Data . . . . . . . . .	 0008	     Byte
Riff . . . . . . . . . . . . . .	 000D
  Riff_Head  . . . . . . . . . .	 0000	     Byte
  Riff_Size  . . . . . . . . . .	 0004	     DWord
  Riff_Type  . . . . . . . . . .	 0008	     Byte
  Riff_Data  . . . . . . . . . .	 000C	     Byte
WTD_ChEmb  . . . . . . . . . . .	 0005
  WTD_ChEmb_Address  . . . . . .	 0000	     Byte
  WTD_ChEmb_Rate . . . . . . . .	 0001	     Byte
  WTD_ChEmb_Counter  . . . . . .	 0002	     Byte
  WTD_ChEmb_MaxMin . . . . . . .	 0003	     Byte
  WTD_ChEmb_LevelSet . . . . . .	 0004	     Byte
WTD_ChLfo  . . . . . . . . . . .	 0009
  WTD_ChLfo_DecayRate  . . . . .	 0000	     Byte
  WTD_ChLfo_SpeedRate  . . . . .	 0001	     Byte
  WTD_ChLfo_Level  . . . . . . .	 0002	     Word
  WTD_ChLfo_Count  . . . . . . .	 0004	     Byte
  WTD_ChLfo_RateCounter  . . . .	 0005	     Byte
  WTD_ChLfo_LevelSet . . . . . .	 0006	     Word
  WTD_ChLfo_CountCounter . . . .	 0008	     Byte
WTD_Emb  . . . . . . . . . . . .	 0010
  WTD_Emb_AR . . . . . . . . . .	 0000	     Byte
  WTD_Emb_AS . . . . . . . . . .	 0001	     Byte
  WTD_Emb_AL . . . . . . . . . .	 0002	     Byte
  WTD_Emb_FL . . . . . . . . . .	 0003	     Byte
  WTD_Emb_DR . . . . . . . . . .	 0004	     Byte
  WTD_Emb_DS . . . . . . . . . .	 0005	     Byte
  WTD_Emb_DL . . . . . . . . . .	 0006	     Byte
  WTD_Emb_Null1  . . . . . . . .	 0007	     Byte
  WTD_Emb_SR . . . . . . . . . .	 0008	     Byte
  WTD_Emb_SS . . . . . . . . . .	 0009	     Byte
  WTD_Emb_SL . . . . . . . . . .	 000A	     Byte
  WTD_Emb_Null2  . . . . . . . .	 000B	     Byte
  WTD_Emb_RR . . . . . . . . . .	 000C	     Byte
  WTD_Emb_RS . . . . . . . . . .	 000D	     Byte
  WTD_Emb_RL . . . . . . . . . .	 000E	     Byte
  WTD_Emb_Null3  . . . . . . . .	 000F	     Byte
WTD_MusEx  . . . . . . . . . . .	 0000
WTD_Mus  . . . . . . . . . . . .	 0012
  WTD_Mus_Name . . . . . . . . .	 0000	     Byte
  WTD_Mus_Version  . . . . . . .	 0004	     Word
  WTD_Mus_Extr . . . . . . . . .	 0006	     Word
  WTD_Mus_Emb  . . . . . . . . .	 0008	     Byte
  WTD_Mus_Voice  . . . . . . . .	 0009	     Byte
  WTD_Mus_Part . . . . . . . . .	 000A	     Byte
  WTD_Mus_TimeBase . . . . . . .	 000B	     Byte
  WTD_Mus_ExtrAdr  . . . . . . .	 000C	     Word
  WTD_Mus_DataAdr  . . . . . . .	 000E	     Word
  WTD_Mus_PartAdr  . . . . . . .	 0010	     Word
WTD_Sys  . . . . . . . . . . . .	 0034
  WTD_Sys_Flag . . . . . . . . .	 0000	     Word
  WTD_Sys_ProgramOffset  . . . .	 0002	     Word
  WTD_Sys_ProgramSegment . . . .	 0004	     Word
  WTD_Sys_MusicOffset  . . . . .	 0006	     Word
  WTD_Sys_MusicSegment . . . . .	 0008	     Word
  WTD_Sys_EffectOffset . . . . .	 000A	     Word
  WTD_Sys_EffectSegment  . . . .	 000C	     Word
  WTD_Sys_PcmOffset  . . . . . .	 000E	     Word
  WTD_Sys_PcmSegment . . . . . .	 0010	     Word
  WTD_Sys_StayOutMask  . . . . .	 0012	     Word
  WTD_Sys_OldIntvector . . . . .	 0014	     Word
  WTD_Sys_OldIntvectorCom  . . .	 0018	     Word
  WTD_Sys_ComFIFO_Offset . . . .	 001C	     Word
  WTD_Sys_ComFIFO_Segment  . . .	 001E	     Word
  WTD_Sys_Null_20  . . . . . . .	 0020	     Byte
  WTD_Sys_VolumeMusic  . . . . .	 0021	     Byte
  WTD_Sys_VolumeEffect . . . . .	 0022	     Byte
  WTD_Sys_VolumePCM  . . . . . .	 0023	     Byte
  WTD_Sys_Tempo  . . . . . . . .	 0024	     Word
  WTD_Sys_TempoCounter . . . . .	 0026	     Word
  WTD_Sys_MusicPart  . . . . . .	 0028	     Byte
  WTD_Sys_EffectPart . . . . . .	 0029	     Byte
  WTD_Sys_ComFIFO_Cnt  . . . . .	 002A	     Word
  WTD_Sys_ComFIFO_Adr  . . . . .	 002C	     Word
  WTD_Sys_ComFIFO_Size . . . . .	 002E	     Word
  WTD_Sys_RunningStatus  . . . .	 0030	     Byte
  WTD_Sys_InterruptBase  . . . .	 0031	     Byte
  WTD_Sys_VoiceTableOffset . . .	 0032	     Word
WTD  . . . . . . . . . . . . . .	 007A
  WTD_FlagControl  . . . . . . .	 0000	     Word
  WTD_FlagTai  . . . . . . . . .	 0002	     Byte
  WTD_FlagSharp  . . . . . . . .	 0003	     Byte
  WTD_FlagFlat . . . . . . . . .	 0004	     Byte
  WTD_Channel  . . . . . . . . .	 0005	     Byte
  WTD_Address  . . . . . . . . .	 0006	     Word
  WTD_LoopCount  . . . . . . . .	 0008	     Byte
  WTD_LoopCountPointer . . . . .	 0010	     Byte
  WTD_Program  . . . . . . . . .	 0011	     Byte
  WTD_SweepLevel . . . . . . . .	 0012	     Byte
  WTD_SweepTime  . . . . . . . .	 0013	     Byte
  WTD_Leng . . . . . . . . . . .	 0014	     Word
  WTD_LengCounter  . . . . . . .	 0016	     Word
  WTD_LengDefault  . . . . . . .	 0018	     Word
  WTD_KeyOffTime . . . . . . . .	 001A	     Word
  WTD_KeyOnDelay . . . . . . . .	 001C	     Word
  WTD_KeyShift . . . . . . . . .	 001E	     Byte
  WTD_Key  . . . . . . . . . . .	 001F	     Byte
  WTD_KeySet . . . . . . . . . .	 0020	     Byte
  WTD_KeySetPointer  . . . . . .	 0028	     Byte
  WTD_AcsentVelocity . . . . . .	 0029	     Byte
  WTD_BendSet  . . . . . . . . .	 002A	     Word
  WTD_Bend . . . . . . . . . . .	 002C	     Word
  WTD_BendDetune . . . . . . . .	 002E	     Word
  WTD_BendLfoDecayRate . . . . .	 0030	     Byte
  WTD_BendLfoSpeedRate . . . . .	 0031	     Byte
  WTD_BendLfoLevel . . . . . . .	 0032	     Word
  WTD_BendLfoCount . . . . . . .	 0034	     Byte
  WTD_BendLfoRateCounter . . . .	 0035	     Byte
  WTD_BendLfoLevelSet  . . . . .	 0036	     Word
  WTD_BendLfoCountCounter  . . .	 0038	     Byte
  WTD_BendEmbAddress . . . . . .	 0039	     Byte
  WTD_BendEmbRate  . . . . . . .	 003A	     Byte
  WTD_BendEmbCounter . . . . . .	 003B	     Byte
  WTD_BendEmbMaxMin  . . . . . .	 003C	     Byte
  WTD_BendEmbLevelSet  . . . . .	 003D	     Byte
  WTD_ReleaseVolume  . . . . . .	 003E	     Byte
  WTD_ExprPanSet . . . . . . . .	 003F	     Byte
  WTD_ExprSet  . . . . . . . . .	 0040	     Byte
  WTD_Expr . . . . . . . . . . .	 0041	     Byte
  WTD_ExprDetune . . . . . . . .	 0042	     Word
  WTD_ExprLfoDecayRate . . . . .	 0044	     Byte
  WTD_ExprLfoSpeedRate . . . . .	 0045	     Byte
  WTD_ExprLfoLevel . . . . . . .	 0046	     Word
  WTD_ExprLfoCount . . . . . . .	 0048	     Byte
  WTD_ExprLfoRateCounter . . . .	 0049	     Byte
  WTD_ExprLfoLevelSet  . . . . .	 004A	     Word
  WTD_ExprLfoCountCounter  . . .	 004C	     Byte
  WTD_ExprEmbAddress . . . . . .	 004D	     Byte
  WTD_ExprEmbRate  . . . . . . .	 004E	     Byte
  WTD_ExprEmbCounter . . . . . .	 004F	     Byte
  WTD_ExprEmbMaxMin  . . . . . .	 0050	     Byte
  WTD_ExprEmbLevelSet  . . . . .	 0051	     Byte
  WTD_WorkAddress  . . . . . . .	 0052	     Byte
  WTD_OctaveSet  . . . . . . . .	 0053	     Byte
  WTD_Octave . . . . . . . . . .	 0054	     Byte
  WTD_GateTime8  . . . . . . . .	 0055	     Byte
  WTD_GateTimeStepLast . . . . .	 0056	     Word
  WTD_GateTimeStepFirst  . . . .	 0058	     Word
  WTD_VolumeUpDown . . . . . . .	 005A	     Byte
  WTD_ModDecay . . . . . . . . .	 005B	     Word
  WTD_ModLevel . . . . . . . . .	 005D	     Byte
  WTD_ModLevelSet  . . . . . . .	 005E	     Byte
  WTD_Null_5F  . . . . . . . . .	 005F	     Byte
  WTD_PanSet . . . . . . . . . .	 0060	     Byte
  WTD_Pan  . . . . . . . . . . .	 0061	     Byte
  WTD_PanDetune  . . . . . . . .	 0062	     Word
  WTD_PanLfoDecayRate  . . . . .	 0064	     Byte
  WTD_PanLfoSpeedRate  . . . . .	 0065	     Byte
  WTD_PanLfoLevel  . . . . . . .	 0066	     Word
  WTD_PanLfoCount  . . . . . . .	 0068	     Byte
  WTD_PanLfoRateCounter  . . . .	 0069	     Byte
  WTD_PanLfoLevelSet . . . . . .	 006A	     Word
  WTD_PanLfoCountCounter . . . .	 006C	     Byte
  WTD_PanEmbAddress  . . . . . .	 006D	     Byte
  WTD_PanEmbRate . . . . . . . .	 006E	     Byte
  WTD_PanEmbCounter  . . . . . .	 006F	     Byte
  WTD_PanEmbMaxMin . . . . . . .	 0070	     Byte
  WTD_PanEmbLevelSet . . . . . .	 0071	     Byte
  WTD_ProgramRate  . . . . . . .	 0072	     Word
  WTD_Program1st . . . . . . . .	 0074	     Byte
  WTD_Program2nd . . . . . . . .	 0075	     Byte
  WTD_Program3rd . . . . . . . .	 0076	     Byte
  WTD_ProgramDecay . . . . . . .	 0077	     Byte
  WTD_ProgramDecayRate . . . . .	 0078	     Word
WaveData . . . . . . . . . . . .	 0009
  WaveData_Head  . . . . . . . .	 0000	     Byte
  WaveData_Size  . . . . . . . .	 0004	     DWord
  WaveData_Data  . . . . . . . .	 0008	     Byte
WaveFmt  . . . . . . . . . . . .	 0018
  WaveFmt_Head . . . . . . . . .	 0000	     Byte
  WaveFmt_Size . . . . . . . . .	 0004	     DWord
  WaveFmt_Type . . . . . . . . .	 0008	     Word
  WaveFmt_Channel  . . . . . . .	 000A	     Word
  WaveFmt_SamplingRate . . . . .	 000C	     DWord
  WaveFmt_SamplingSec  . . . . .	 0010	     DWord
  WaveFmt_DataSize . . . . . . .	 0014	     Word
  WaveFmt_ChannelSize  . . . . .	 0016	     Word


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

DGROUP . . . . . . . . . . . . .	GROUP
_TEXT  . . . . . . . . . . . . .	16 Bit	 02D9	  Word	  Public  'CODE'	
_DATA  . . . . . . . . . . . . .	16 Bit	 0000	  Word	  Public  'DATA'	
STACK  . . . . . . . . . . . . .	16 Bit	 1000	  Para	  Stack	  'STACK'	 
_BSS . . . . . . . . . . . . . .	16 Bit	 0002	  Word	  Public  'BSS'  
CONST  . . . . . . . . . . . . .	16 Bit	 00EB	  Word	  Public  'CONST'	 ReadOnly


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

ASC2HEX16  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ASC2HEX8 . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ChangeExt  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Change_Current_Directory . . . .	P Near	 0000	  Length= 0000 External STDCALL
ComSmole . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
ExeSmole . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
FH2A16 . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
FH2A8  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Close . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Create  . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Err . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Load_S  . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Load  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Open  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Seek  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
File_Write . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
H2A8 . . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
H2A_F  . . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
HEX2ASC16  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
HEX2ASC8 . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Memory_Close . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
Memory_Open  . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
OPTION_ERROR . . . . . . . . . .	P Near	 011F	  _TEXT	Length= 0006 Public STDCALL
OPTION_HELP  . . . . . . . . . .	P Near	 0125	  _TEXT	Length= 000F Public STDCALL
Op_  . . . . . . . . . . . . . .	P Near	 0134	  _TEXT	Length= 00E4 Public STDCALL
  ptFilename . . . . . . . . . .	DWord	 bp + 0004
  cHelp  . . . . . . . . . . . .	Byte	 bp - 0001
  dotFlag  . . . . . . . . . . .	Byte	 bp - 0002
_main  . . . . . . . . . . . . .	P Near	 020A	  _TEXT	Length= 00CF Public STDCALL
  Ext  . . . . . . . . . . . . .	Byte	 bp - 0003
  cFilename  . . . . . . . . . .	Byte	 bp - 0089
dat2hex16  . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL
dat2hex8 . . . . . . . . . . . .	P Near	 0000	  Length= 0000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 0000h	 
@DataSize  . . . . . . . . . . .	Number	 0000h	 
@Interface . . . . . . . . . . .	Number	 0003h	 
@Model . . . . . . . . . . . . .	Number	 0001h	 
@Startup . . . . . . . . . . . .	L Near	 0100	  _TEXT	
@code  . . . . . . . . . . . . .	Text   	 DGROUP
@data  . . . . . . . . . . . . .	Text   	 DGROUP
@fardata?  . . . . . . . . . . .	Text   	 FAR_BSS
@fardata . . . . . . . . . . . .	Text   	 FAR_DATA
@stack . . . . . . . . . . . . .	Text   	 DGROUP
BIOS_FILE  . . . . . . . . . . .	Byte	 009D	  CONST	
FROM_Segment . . . . . . . . . .	Text   	 BANK_ROM0_ADDRESS
IRAM_Segment . . . . . . . . . .	Number	 0000h	 
IRAM_SoundVoiceTable_WW  . . . .	Number	 0180h	 
IRAM_SoundVoiceTable . . . . . .	Text   	 IRAM_SoundVoiceTable_WW
InterruptVectorBase_WW . . . . .	Text   	 INT_HARDHAEW_VECTOR_BASE
InterruptVectorBase  . . . . . .	Text   	 InterruptVectorBase_WW
MUS_ERR  . . . . . . . . . . . .	Byte	 00AC	  CONST	
OPTION_ERROR_MSG . . . . . . . .	Byte	 0000	  CONST	
OP_HELP  . . . . . . . . . . . .	Byte	 0019	  CONST	
PRINT_ERR  . . . . . . . . . . .	L Near	 0114	  _TEXT	
SRAM_Segment . . . . . . . . . .	Text   	 BANK_SRAM_ADDRESS
WSC_HEAD . . . . . . . . . . . .	Byte	 00DB	  CONST	
WSR_HEAD . . . . . . . . . . . .	Byte	 00CB	  CONST	
WTD_BendEmb  . . . . . . . . . .	Text   	 WTD_BendEmbAddress
WTD_BendLFO  . . . . . . . . . .	Text   	 WTD_BendLfoDecayRate
WTD_Ctrl_AcsentR . . . . . . . .	Number	 FFBFh	 
WTD_Ctrl_Acsent  . . . . . . . .	Number	 0040h	 
WTD_Ctrl_BendEmbR  . . . . . . .	Number	 FFFDh	 
WTD_Ctrl_BendEmb . . . . . . . .	Number	 0002h	 
WTD_Ctrl_BendLfoR  . . . . . . .	Number	 FFFEh	 
WTD_Ctrl_BendLfo . . . . . . . .	Number	 0001h	 
WTD_Ctrl_EffectR . . . . . . . .	Number	 BFFFh	 
WTD_Ctrl_Effect  . . . . . . . .	Number	 4000h	 
WTD_Ctrl_EmbFreqR  . . . . . . .	Number	 FF7Fh	 
WTD_Ctrl_EmbFreq . . . . . . . .	Number	 0080h	 
WTD_Ctrl_EmbPanR . . . . . . . .	Number	 FDFFh	 
WTD_Ctrl_EmbPan  . . . . . . . .	Number	 0200h	 
WTD_Ctrl_EmbVolR . . . . . . . .	Number	 FEFFh	 
WTD_Ctrl_EmbVol  . . . . . . . .	Number	 0100h	 
WTD_Ctrl_ExprEmbR  . . . . . . .	Number	 FFF7h	 
WTD_Ctrl_ExprEmb . . . . . . . .	Number	 0008h	 
WTD_Ctrl_ExprLfoR  . . . . . . .	Number	 FFFBh	 
WTD_Ctrl_ExprLfo . . . . . . . .	Number	 0004h	 
WTD_Ctrl_PamEmbR . . . . . . . .	Number	 FFDFh	 
WTD_Ctrl_PanEmb  . . . . . . . .	Number	 0020h	 
WTD_Ctrl_PanLfoR . . . . . . . .	Number	 FFEFh	 
WTD_Ctrl_PanLfo  . . . . . . . .	Number	 0010h	 
WTD_Ctrl_PlayEndR  . . . . . . .	Number	 7FFFh	 
WTD_Ctrl_PlayEnd . . . . . . . .	Number	 8000h	 
WTD_Ctrl_Vol0R . . . . . . . . .	Number	 FBFFh	 
WTD_Ctrl_Vol0  . . . . . . . . .	Number	 0400h	 
WTD_Ctrl_WorkCyR . . . . . . . .	Number	 EFFFh	 
WTD_Ctrl_WorkCy  . . . . . . . .	Number	 1000h	 
WTD_Ctrl_WorkSwR . . . . . . . .	Number	 F7FFh	 
WTD_Ctrl_WorkSw  . . . . . . . .	Number	 0800h	 
WTD_Ctrl_WorkZeR . . . . . . . .	Number	 DFFFh	 
WTD_Ctrl_WorkZe  . . . . . . . .	Number	 2000h	 
WTD_ExprEmb  . . . . . . . . . .	Text   	 WTD_ExprEmbAddress
WTD_ExprLFO  . . . . . . . . . .	Text   	 WTD_ExprLfoDecayRate
WTD_FrectionSet  . . . . . . . .	Text   	 WTD_BendSet
WTD_Frection . . . . . . . . . .	Text   	 WTD_Bend
WTD_NoiseMode  . . . . . . . . .	Text   	 WTD_SweepLevel
WTD_PanEmb . . . . . . . . . . .	Text   	 WTD_PanEmbAddress
WTD_PanLFO . . . . . . . . . . .	Text   	 WTD_PanLfoDecayRate
WTD_PcmAddress . . . . . . . . .	Text   	 WTD_LoopCount
WTD_PcmSize  . . . . . . . . . .	Text   	 WTD_LoopCount+4
WTD_Sys_3R . . . . . . . . . . .	Number	 FFF7h	 
WTD_Sys_3  . . . . . . . . . . .	Number	 0008h	 
WTD_Sys_5R . . . . . . . . . . .	Number	 FFDFh	 
WTD_Sys_5  . . . . . . . . . . .	Number	 0020h	 
WTD_Sys_6R . . . . . . . . . . .	Number	 FFBFh	 
WTD_Sys_6  . . . . . . . . . . .	Number	 0040h	 
WTD_Sys_ChannelMode1R  . . . . .	Number	 FEFFh	 
WTD_Sys_ChannelMode1 . . . . . .	Number	 0100h	 
WTD_Sys_ChannelMode2R  . . . . .	Number	 FDFFh	 
WTD_Sys_ChannelMode2 . . . . . .	Number	 0200h	 
WTD_Sys_ChannelMode3R  . . . . .	Number	 FBFFh	 
WTD_Sys_ChannelMode3 . . . . . .	Number	 0400h	 
WTD_Sys_ChannelMode4R  . . . . .	Number	 F7FFh	 
WTD_Sys_ChannelMode4 . . . . . .	Number	 0800h	 
WTD_Sys_EffectMask1R . . . . . .	Number	 EFFFh	 
WTD_Sys_EffectMask1  . . . . . .	Number	 1000h	 
WTD_Sys_EffectMask2R . . . . . .	Number	 DFFFh	 
WTD_Sys_EffectMask2  . . . . . .	Number	 2000h	 
WTD_Sys_EffectMask3R . . . . . .	Number	 BFFFh	 
WTD_Sys_EffectMask3  . . . . . .	Number	 4000h	 
WTD_Sys_EffectMask4R . . . . . .	Number	 7FFFh	 
WTD_Sys_EffectMask4  . . . . . .	Number	 8000h	 
WTD_Sys_EffectR  . . . . . . . .	Number	 FFFDh	 
WTD_Sys_Effect . . . . . . . . .	Number	 0002h	 
WTD_Sys_MidiR  . . . . . . . . .	Number	 FFEFh	 
WTD_Sys_Midi . . . . . . . . . .	Number	 0010h	 
WTD_Sys_MusicR . . . . . . . . .	Number	 FFFEh	 
WTD_Sys_Music  . . . . . . . . .	Number	 0001h	 
WTD_Sys_PcmR . . . . . . . . . .	Number	 FFFBh	 
WTD_Sys_Pcm  . . . . . . . . . .	Number	 0004h	 
WTD_Sys_TimerEmulateR  . . . . .	Number	 FF7Fh	 
WTD_Sys_TimerEmulate . . . . . .	Number	 0080h	 
WTD_Velocity . . . . . . . . . .	Text   	 WTD_ExprPanSet
WTD_Voice1st . . . . . . . . . .	Text   	 WTD_Program1st
WTD_Voice2nd . . . . . . . . . .	Text   	 WTD_Program2nd
WTD_Voice3rd . . . . . . . . . .	Text   	 WTD_Program3rd
WTD_VoiceCnt . . . . . . . . . .	Text   	 WTD_ProgramCnt
WTD_VoiceRate  . . . . . . . . .	Text   	 WTD_ProgramRate
WTD_Voice  . . . . . . . . . . .	Text   	 WTD_Program
WTD_WorkAdd_Ch0  . . . . . . . .	Number	 0600h	 
WTD_WorkAdd_Ch10 . . . . . . . .	Number	 0B00h	 
WTD_WorkAdd_Ch11 . . . . . . . .	Number	 0B80h	 
WTD_WorkAdd_Ch12 . . . . . . . .	Number	 0C00h	 
WTD_WorkAdd_Ch13 . . . . . . . .	Number	 0C80h	 
WTD_WorkAdd_Ch14 . . . . . . . .	Number	 0D00h	 
WTD_WorkAdd_Ch15 . . . . . . . .	Number	 0D80h	 
WTD_WorkAdd_Ch17 . . . . . . . .	Number	 0E80h	 
WTD_WorkAdd_Ch18 . . . . . . . .	Number	 0F00h	 
WTD_WorkAdd_Ch19 . . . . . . . .	Number	 0F80h	 
WTD_WorkAdd_Ch1  . . . . . . . .	Number	 0680h	 
WTD_WorkAdd_Ch2  . . . . . . . .	Number	 0700h	 
WTD_WorkAdd_Ch3  . . . . . . . .	Number	 0780h	 
WTD_WorkAdd_Ch4  . . . . . . . .	Number	 0800h	 
WTD_WorkAdd_Ch5  . . . . . . . .	Number	 0880h	 
WTD_WorkAdd_Ch6  . . . . . . . .	Number	 0900h	 
WTD_WorkAdd_Ch7  . . . . . . . .	Number	 0980h	 
WTD_WorkAdd_Ch8  . . . . . . . .	Number	 0A00h	 
WTD_WorkAdd_Ch9  . . . . . . . .	Number	 0A80h	 
WTD_WorkAdd_Ech0 . . . . . . . .	Number	 0400h	 
WTD_WorkAdd_Ech1 . . . . . . . .	Number	 0480h	 
WTD_WorkAdd_Ech2 . . . . . . . .	Number	 0500h	 
WTD_WorkAdd_Emb  . . . . . . . .	Number	 0200h	 
WTD_WorkAdd_End  . . . . . . . .	Text   	 WTD_WorkSize
WTD_WorkAdd_PCM  . . . . . . . .	Number	 0580h	 
WTD_WorkAdd_System . . . . . . .	Number	 0380h	 
WTD_WorkAdd_User . . . . . . . .	Number	 0000h	 
WTD_WorkAdd_Wave . . . . . . . .	Number	 0100h	 
WTD_WorkChSize . . . . . . . . .	Number	 0080h	 
WTD_WorkSize . . . . . . . . . .	Number	 1000h	 
WTR_WorkAdd_Ch16 . . . . . . . .	Number	 0E00h	 
WTdIL_Version_N  . . . . . . . .	Number	 010Dh	 
WtdIL_Version  . . . . . . . . .	Text   	 '1.0d',0
pWSC_File  . . . . . . . . . . .	Word	 0000	  _BSS	

	   0 Warnings
	   0 Errors
